//Optimal


import java.util.* ;
import java.io.*; 

public class Solution {

    static int largestElement(int[] arr, int n) {
        int largest=arr[0];
        for(int i=0;i<=n-1;i++){
            if(arr[i]>largest){
               largest=arr[i]; 
            }
        }
        return largest;

    }
}



//Brute



import java.util.* ;
import java.io.*; 

public class Solution {
    static int insertion(int arr[],int n){
        for(int i=0;i<=n-1;i++){
            int j=i;
            while(j>0 && arr[j-1]>arr[j]){
                int temp=arr[j-1];
                arr[j-1]=arr[j];
                arr[j]=temp;
            }
        }
        return arr[n-1];
    }

    static int largestElement(int[] arr, int n) {
         return insertion(arr,n);

    }
}