import java.util.*;
import java.io.*;

public class Solution {

    public static int floor(int[] a, int n, int x) {
        int ans = -1;
        int low = 0, high = n - 1, mid;
        while (low <= high) {
            mid = low + (high - low) / 2;
            if (a[mid] <= x) {
                ans = a[mid];
                low = mid + 1;
            } else
                high = mid - 1;
        }
        return ans;
    }

    public static int ceil(int[] a, int n, int x) {
        int ans1 = -1;
        int low = 0, high = n - 1, mid;
        while (low <= high) {
            mid = low + (high - low) / 2;
            if (a[mid] >= x) {
                ans1 = a[mid];
                high = mid - 1;
            } else
                low = mid + 1;
        }
        return ans1;
    }

    public static int[] getFloorAndCeil(int[] a, int n, int x) {
        int ans = floor(a, n, x);
        int ans1 = ceil(a, n, x);
        int[] a1 = new int[2];
        a1[0] = ans;
        a1[1] = ans1;
        return a1;
    }
}
