//brute


import java.util.*;
public class Solution {
    public static List<Integer> superiorElements(int[] a) {
      int n=a.length;
        ArrayList<Integer> ans=new ArrayList<Integer>();
        for(int i=0;i<n;i++){
          boolean leader=true;
          for(int j=i+1;j<n;j++){
            if(a[j]>=a[i]){
              leader=false;
              break;
            }
          }
          if(leader){
            ans.add(a[i]);
          }
        }
        Collections.sort(ans);
        return ans;
        
}
}



//optimal



import java.util.*;
public class Solution {
    public static List<Integer> superiorElements(int[] a) {
      int n=a.length;
      int maxi=Integer.MIN_VALUE;
        ArrayList<Integer> ans=new ArrayList<Integer>();
        for(int i=n-1;i>=0;i--){
          if(a[i]>maxi){
            ans.add(a[i]);
          }
          maxi=Math.max(maxi, a[i]);

        }
        Collections.sort(ans);
        return ans;
        
}
}